 /*
  * # Semantic UI - 2.2.10
  * https://github.com/Semantic-Org/Semantic-UI
  * http://www.semantic-ui.com/
  *
  * Copyright 2014 Contributors
  * Released under the MIT license
  * http://opensource.org/licenses/MIT
  *
  */
 ! function(e, t, n, i) {
   "use strict";
   t = void 0 !== t && t.Math == Math ? t : "undefined" != typeof self && self.Math == Math ? self : Function("return this")(), e.fn.sidebar = function(i) {
     var o, a = e(this),
       r = e(t),
       s = e(n),
       l = e("html"),
       c = e("head"),
       u = a.selector || "",
       d = (new Date).getTime(),
       v = [],
       m = arguments[0],
       f = "string" == typeof m,
       h = [].slice.call(arguments, 1),
       g = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
         setTimeout(e, 0)
       };
     return a.each(function() {
       var a, p, b, y, w, C, x = e.isPlainObject(i) ? e.extend(!0, {}, e.fn.sidebar.settings, i) : e.extend({}, e.fn.sidebar.settings),
         S = x.selector,
         T = x.className,
         A = x.namespace,
         k = x.regExp,
         D = x.error,
         q = "." + A,
         L = "module-" + A,
         O = e(this),
         R = e(x.context),
         E = O.children(S.sidebar),
         I = R.children(S.fixed),
         F = R.children(S.pusher),
         M = this,
         P = O.data(L);
       C = {
         initialize: function() {
           C.debug("Initializing sidebar", i), C.create.id(), w = C.get.transitionEvent(), C.is.ios() && C.set.ios(), x.delaySetup ? g(C.setup.layout) : C.setup.layout(), g(function() {
             C.setup.cache()
           }), C.instantiate()
         },
         instantiate: function() {
           C.verbose("Storing instance of module", C), P = C, O.data(L, C)
         },
         create: {
           id: function() {
             b = (Math.random().toString(16) + "000000000").substr(2, 8), p = "." + b, C.verbose("Creating unique id for element", b)
           }
         },
         destroy: function() {
           C.verbose("Destroying previous module for", O), O.off(q).removeData(L), C.is.ios() && C.remove.ios(), R.off(p), r.off(p), s.off(p)
         },
         event: {
           clickaway: function(e) {
             var t = F.find(e.target).length > 0 || F.is(e.target),
               n = R.is(e.target);
             t && (C.verbose("User clicked on dimmed page"), C.hide()), n && (C.verbose("User clicked on dimmable context (scaled out page)"), C.hide())
           },
           touch: function(e) {},
           containScroll: function(e) {
             M.scrollTop <= 0 && (M.scrollTop = 1), M.scrollTop + M.offsetHeight >= M.scrollHeight && (M.scrollTop = M.scrollHeight - M.offsetHeight - 1)
           },
           scroll: function(t) {
             0 === e(t.target).closest(S.sidebar).length && t.preventDefault()
           }
         },
         bind: {
           clickaway: function() {
             C.verbose("Adding clickaway events to context", R), x.closable && R.on("click" + p, C.event.clickaway).on("touchend" + p, C.event.clickaway)
           },
           scrollLock: function() {
             x.scrollLock && (C.debug("Disabling page scroll"), r.on("DOMMouseScroll" + p, C.event.scroll)), C.verbose("Adding events to contain sidebar scroll"), s.on("touchmove" + p, C.event.touch), O.on("scroll" + q, C.event.containScroll)
           }
         },
         unbind: {
           clickaway: function() {
             C.verbose("Removing clickaway events from context", R), R.off(p)
           },
           scrollLock: function() {
             C.verbose("Removing scroll lock from page"), s.off(p), r.off(p), O.off("scroll" + q)
           }
         },
         add: {
           inlineCSS: function() {
             var t, n = C.cache.width || O.outerWidth(),
               i = C.cache.height || O.outerHeight(),
               o = C.is.rtl(),
               r = C.get.direction(),
               s = {
                 left: n,
                 right: -n,
                 top: i,
                 bottom: -i
               };
             o && (C.verbose("RTL detected, flipping widths"), s.left = -n, s.right = n), t = "<style>", "left" === r || "right" === r ? (C.debug("Adding CSS rules for animation distance", n), t += " .ui.visible." + r + ".sidebar ~ .fixed, .ui.visible." + r + ".sidebar ~ .pusher {   -webkit-transform: translate3d(" + s[r] + "px, 0, 0);           transform: translate3d(" + s[r] + "px, 0, 0); }") : "top" !== r && "bottom" != r || (t += " .ui.visible." + r + ".sidebar ~ .fixed, .ui.visible." + r + ".sidebar ~ .pusher {   -webkit-transform: translate3d(0, " + s[r] + "px, 0);           transform: translate3d(0, " + s[r] + "px, 0); }"), C.is.ie() && ("left" === r || "right" === r ? (C.debug("Adding CSS rules for animation distance", n), t += " body.pushable > .ui.visible." + r + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(" + s[r] + "px, 0, 0);           transform: translate3d(" + s[r] + "px, 0, 0); }") : "top" !== r && "bottom" != r || (t += " body.pushable > .ui.visible." + r + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(0, " + s[r] + "px, 0);           transform: translate3d(0, " + s[r] + "px, 0); }"), t += " body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after, body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {   -webkit-transform: translate3d(0px, 0, 0);           transform: translate3d(0px, 0, 0); }"), t += "</style>", a = e(t).appendTo(c), C.debug("Adding sizing css to head", a)
           }
         },
         refresh: function() {
           C.verbose("Refreshing selector cache"), R = e(x.context), E = R.children(S.sidebar), F = R.children(S.pusher), I = R.children(S.fixed), C.clear.cache()
         },
         refreshSidebars: function() {
           C.verbose("Refreshing other sidebars"), E = R.children(S.sidebar)
         },
         repaint: function() {
           C.verbose("Forcing repaint event"), M.style.display = "none";
           M.offsetHeight;
           M.scrollTop = M.scrollTop, M.style.display = ""
         },
         setup: {
           cache: function() {
             C.cache = {
               width: O.outerWidth(),
               height: O.outerHeight(),
               rtl: "rtl" == O.css("direction")
             }
           },
           layout: function() {
             0 === R.children(S.pusher).length && (C.debug("Adding wrapper element for sidebar"), C.error(D.pusher), F = e('<div class="pusher" />'), R.children().not(S.omitted).not(E).wrapAll(F), C.refresh()), 0 !== O.nextAll(S.pusher).length && O.nextAll(S.pusher)[0] === F[0] || (C.debug("Moved sidebar to correct parent element"), C.error(D.movedSidebar, M), O.detach().prependTo(R), C.refresh()), C.clear.cache(), C.set.pushable(), C.set.direction()
           }
         },
         attachEvents: function(t, n) {
           var i = e(t);
           n = e.isFunction(C[n]) ? C[n] : C.toggle, i.length > 0 ? (C.debug("Attaching sidebar events to element", t, n), i.on("click" + q, n)) : C.error(D.notFound, t)
         },
         show: function(t) {
           if (t = e.isFunction(t) ? t : function() {}, C.is.hidden()) {
             if (C.refreshSidebars(), x.overlay && (C.error(D.overlay), x.transition = "overlay"), C.refresh(), C.othersActive())
               if (C.debug("Other sidebars currently visible"), x.exclusive) {
                 if ("overlay" != x.transition) return void C.hideOthers(C.show);
                 C.hideOthers()
               } else x.transition = "overlay";
             C.pushPage(function() {
               t.call(M), x.onShow.call(M)
             }), x.onChange.call(M), x.onVisible.call(M)
           } else C.debug("Sidebar is already visible")
         },
         hide: function(t) {
           t = e.isFunction(t) ? t : function() {}, (C.is.visible() || C.is.animating()) && (C.debug("Hiding sidebar", t), C.refreshSidebars(), C.pullPage(function() {
             t.call(M), x.onHidden.call(M)
           }), x.onChange.call(M), x.onHide.call(M))
         },
         othersAnimating: function() {
           return E.not(O).filter("." + T.animating).length > 0
         },
         othersVisible: function() {
           return E.not(O).filter("." + T.visible).length > 0
         },
         othersActive: function() {
           return C.othersVisible() || C.othersAnimating()
         },
         hideOthers: function(e) {
           var t = E.not(O).filter("." + T.visible),
             n = t.length,
             i = 0;
           e = e || function() {}, t.sidebar("hide", function() {
             ++i == n && e()
           })
         },
         toggle: function() {
           C.verbose("Determining toggled direction"), C.is.hidden() ? C.show() : C.hide()
         },
         pushPage: function(t) {
           var n, i, o, a = C.get.transition(),
             r = "overlay" === a || C.othersActive() ? O : F;
           t = e.isFunction(t) ? t : function() {}, "scale down" == x.transition && C.scrollToTop(), C.set.transition(a), C.repaint(), n = function() {
             C.bind.clickaway(), C.add.inlineCSS(), C.set.animating(), C.set.visible()
           }, i = function() {
             C.set.dimmed()
           }, o = function(e) {
             e.target == r[0] && (r.off(w + p, o), C.remove.animating(), C.bind.scrollLock(), t.call(M))
           }, r.off(w + p), r.on(w + p, o), g(n), x.dimPage && !C.othersVisible() && g(i)
         },
         pullPage: function(t) {
           var n, i, o = C.get.transition(),
             a = "overlay" == o || C.othersActive() ? O : F;
           t = e.isFunction(t) ? t : function() {}, C.verbose("Removing context push state", C.get.direction()), C.unbind.clickaway(), C.unbind.scrollLock(), n = function() {
             C.set.transition(o), C.set.animating(), C.remove.visible(), x.dimPage && !C.othersVisible() && F.removeClass(T.dimmed)
           }, i = function(e) {
             e.target == a[0] && (a.off(w + p, i), C.remove.animating(), C.remove.transition(), C.remove.inlineCSS(), ("scale down" == o || x.returnScroll && C.is.mobile()) && C.scrollBack(), t.call(M))
           }, a.off(w + p), a.on(w + p, i), g(n)
         },
         scrollToTop: function() {
           C.verbose("Scrolling to top of page to avoid animation issues"), y = e(t).scrollTop(), O.scrollTop(0), t.scrollTo(0, 0)
         },
         scrollBack: function() {
           C.verbose("Scrolling back to original page position"), t.scrollTo(0, y)
         },
         clear: {
           cache: function() {
             C.verbose("Clearing cached dimensions"), C.cache = {}
           }
         },
         set: {
           ios: function() {
             l.addClass(T.ios)
           },
           pushed: function() {
             R.addClass(T.pushed)
           },
           pushable: function() {
             R.addClass(T.pushable)
           },
           dimmed: function() {
             F.addClass(T.dimmed)
           },
           active: function() {
             O.addClass(T.active)
           },
           animating: function() {
             O.addClass(T.animating)
           },
           transition: function(e) {
             e = e || C.get.transition(), O.addClass(e)
           },
           direction: function(e) {
             e = e || C.get.direction(), O.addClass(T[e])
           },
           visible: function() {
             O.addClass(T.visible)
           },
           overlay: function() {
             O.addClass(T.overlay)
           }
         },
         remove: {
           inlineCSS: function() {
             C.debug("Removing inline css styles", a), a && a.length > 0 && a.remove()
           },
           ios: function() {
             l.removeClass(T.ios)
           },
           pushed: function() {
             R.removeClass(T.pushed)
           },
           pushable: function() {
             R.removeClass(T.pushable)
           },
           active: function() {
             O.removeClass(T.active)
           },
           animating: function() {
             O.removeClass(T.animating)
           },
           transition: function(e) {
             e = e || C.get.transition(), O.removeClass(e)
           },
           direction: function(e) {
             e = e || C.get.direction(), O.removeClass(T[e])
           },
           visible: function() {
             O.removeClass(T.visible)
           },
           overlay: function() {
             O.removeClass(T.overlay)
           }
         },
         get: {
           direction: function() {
             return O.hasClass(T.top) ? T.top : O.hasClass(T.right) ? T.right : O.hasClass(T.bottom) ? T.bottom : T.left
           },
           transition: function() {
             var e, t = C.get.direction();
             return e = C.is.mobile() ? "auto" == x.mobileTransition ? x.defaultTransition.mobile[t] : x.mobileTransition : "auto" == x.transition ? x.defaultTransition.computer[t] : x.transition, C.verbose("Determined transition", e), e
           },
           transitionEvent: function() {
             var e, t = n.createElement("element"),
               i = {
                 transition: "transitionend",
                 OTransition: "oTransitionEnd",
                 MozTransition: "transitionend",
                 WebkitTransition: "webkitTransitionEnd"
               };
             for (e in i)
               if (void 0 !== t.style[e]) return i[e]
           }
         },
         is: {
           ie: function() {
             var e = !t.ActiveXObject && "ActiveXObject" in t,
               n = "ActiveXObject" in t;
             return e || n
           },
           ios: function() {
             var e = navigator.userAgent,
               t = e.match(k.ios),
               n = e.match(k.mobileChrome);
             return !(!t || n) && (C.verbose("Browser was found to be iOS", e), !0)
           },
           mobile: function() {
             var e = navigator.userAgent;
             return e.match(k.mobile) ? (C.verbose("Browser was found to be mobile", e), !0) : (C.verbose("Browser is not mobile, using regular transition", e), !1)
           },
           hidden: function() {
             return !C.is.visible()
           },
           visible: function() {
             return O.hasClass(T.visible)
           },
           open: function() {
             return C.is.visible()
           },
           closed: function() {
             return C.is.hidden()
           },
           vertical: function() {
             return O.hasClass(T.top)
           },
           animating: function() {
             return R.hasClass(T.animating)
           },
           rtl: function() {
             return void 0 === C.cache.rtl && (C.cache.rtl = "rtl" == O.css("direction")), C.cache.rtl
           }
         },
         setting: function(t, n) {
           if (C.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, x, t);
           else {
             if (void 0 === n) return x[t];
             e.isPlainObject(x[t]) ? e.extend(!0, x[t], n) : x[t] = n
           }
         },
         internal: function(t, n) {
           if (e.isPlainObject(t)) e.extend(!0, C, t);
           else {
             if (void 0 === n) return C[t];
             C[t] = n
           }
         },
         debug: function() {
           !x.silent && x.debug && (x.performance ? C.performance.log(arguments) : (C.debug = Function.prototype.bind.call(console.info, console, x.name + ":"), C.debug.apply(console, arguments)))
         },
         verbose: function() {
           !x.silent && x.verbose && x.debug && (x.performance ? C.performance.log(arguments) : (C.verbose = Function.prototype.bind.call(console.info, console, x.name + ":"), C.verbose.apply(console, arguments)))
         },
         error: function() {
           x.silent || (C.error = Function.prototype.bind.call(console.error, console, x.name + ":"), C.error.apply(console, arguments))
         },
         performance: {
           log: function(e) {
             var t, n, i;
             x.performance && (t = (new Date).getTime(), i = d || t, n = t - i, d = t, v.push({
               Name: e[0],
               Arguments: [].slice.call(e, 1) || "",
               Element: M,
               "Execution Time": n
             })), clearTimeout(C.performance.timer), C.performance.timer = setTimeout(C.performance.display, 500)
           },
           display: function() {
             var t = x.name + ":",
               n = 0;
             d = !1, clearTimeout(C.performance.timer), e.each(v, function(e, t) {
               n += t["Execution Time"]
             }), t += " " + n + "ms", u && (t += " '" + u + "'"), (void 0 !== console.group || void 0 !== console.table) && v.length > 0 && (console.groupCollapsed(t), console.table ? console.table(v) : e.each(v, function(e, t) {
               console.log(t.Name + ": " + t["Execution Time"] + "ms")
             }), console.groupEnd()), v = []
           }
         },
         invoke: function(t, n, i) {
           var a, r, s, l = P;
           return n = n || h, i = M || i, "string" == typeof t && void 0 !== l && (t = t.split(/[\. ]/), a = t.length - 1, e.each(t, function(n, i) {
             var o = n != a ? i + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
             if (e.isPlainObject(l[o]) && n != a) l = l[o];
             else {
               if (void 0 !== l[o]) return r = l[o], !1;
               if (!e.isPlainObject(l[i]) || n == a) return void 0 !== l[i] ? (r = l[i], !1) : (C.error(D.method, t), !1);
               l = l[i]
             }
           })), e.isFunction(r) ? s = r.apply(i, n) : void 0 !== r && (s = r), e.isArray(o) ? o.push(s) : void 0 !== o ? o = [o, s] : void 0 !== s && (o = s), r
         }
       }, f ? (void 0 === P && C.initialize(), C.invoke(m)) : (void 0 !== P && C.invoke("destroy"), C.initialize())
     }), void 0 !== o ? o : this
   }, e.fn.sidebar.settings = {
     name: "Sidebar",
     namespace: "sidebar",
     silent: !1,
     debug: !1,
     verbose: !1,
     performance: !0,
     transition: "auto",
     mobileTransition: "auto",
     defaultTransition: {
       computer: {
         left: "uncover",
         right: "uncover",
         top: "overlay",
         bottom: "overlay"
       },
       mobile: {
         left: "uncover",
         right: "uncover",
         top: "overlay",
         bottom: "overlay"
       }
     },
     context: "body",
     exclusive: !1,
     closable: !0,
     dimPage: !0,
     scrollLock: !1,
     returnScroll: !1,
     delaySetup: !1,
     duration: 500,
     onChange: function() {},
     onShow: function() {},
     onHide: function() {},
     onHidden: function() {},
     onVisible: function() {},
     className: {
       active: "active",
       animating: "animating",
       dimmed: "dimmed",
       ios: "ios",
       pushable: "pushable",
       pushed: "pushed",
       right: "right",
       top: "top",
       left: "left",
       bottom: "bottom",
       visible: "visible"
     },
     selector: {
       fixed: ".fixed",
       omitted: "script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed",
       pusher: ".pusher",
       sidebar: ".ui.sidebar"
     },
     regExp: {
       ios: /(iPad|iPhone|iPod)/g,
       mobileChrome: /(CriOS)/g,
       mobile: /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g
     },
     error: {
       method: "The method you called is not defined.",
       pusher: "Had to add pusher element. For optimal performance make sure body content is inside a pusher element",
       movedSidebar: "Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag",
       overlay: "The overlay setting is no longer supported, use animation: overlay",
       notFound: "There were no elements that matched the specified selector"
     }
   }
 }(jQuery, window, document),
 function(e, t, n, i) {
   "use strict";
   t = void 0 !== t && t.Math == Math ? t : "undefined" != typeof self && self.Math == Math ? self : Function("return this")(), e.fn.dropdown = function(i) {
     var o, a = e(this),
       r = e(n),
       s = a.selector || "",
       l = "ontouchstart" in n.documentElement,
       c = (new Date).getTime(),
       u = [],
       d = arguments[0],
       v = "string" == typeof d,
       m = [].slice.call(arguments, 1);
     return a.each(function(f) {
       var h, g, p, b, y, w, C, x, S = e.isPlainObject(i) ? e.extend(!0, {}, e.fn.dropdown.settings, i) : e.extend({}, e.fn.dropdown.settings),
         T = S.className,
         A = S.message,
         k = S.fields,
         D = S.keys,
         q = S.metadata,
         L = S.namespace,
         O = S.regExp,
         R = S.selector,
         E = S.error,
         I = S.templates,
         F = "." + L,
         M = "module-" + L,
         P = e(this),
         V = e(S.context),
         z = P.find(R.text),
         H = P.find(R.search),
         j = P.find(R.sizer),
         N = P.find(R.input),
         U = P.find(R.icon),
         B = P.prev().find(R.text).length > 0 ? P.prev().find(R.text) : P.prev(),
         W = P.children(R.menu),
         K = W.find(R.item),
         Q = !1,
         X = !1,
         $ = !1,
         Y = this,
         Z = P.data(M);
       x = {
         initialize: function() {
           x.debug("Initializing dropdown", S), x.is.alreadySetup() ? x.setup.reference() : (x.setup.layout(), x.refreshData(), x.save.defaults(), x.restore.selected(), x.create.id(), x.bind.events(), x.observeChanges(), x.instantiate())
         },
         instantiate: function() {
           x.verbose("Storing instance of dropdown", x), Z = x, P.data(M, x)
         },
         destroy: function() {
           x.verbose("Destroying previous dropdown", P), x.remove.tabbable(), P.off(F).removeData(M), W.off(F), r.off(b), x.disconnect.menuObserver(), x.disconnect.selectObserver()
         },
         observeChanges: function() {
           "MutationObserver" in t && (w = new MutationObserver(x.event.select.mutation), C = new MutationObserver(x.event.menu.mutation), x.debug("Setting up mutation observer", w, C), x.observe.select(), x.observe.menu())
         },
         disconnect: {
           menuObserver: function() {
             C && C.disconnect()
           },
           selectObserver: function() {
             w && w.disconnect()
           }
         },
         observe: {
           select: function() {
             x.has.input() && w.observe(N[0], {
               childList: !0,
               subtree: !0
             })
           },
           menu: function() {
             x.has.menu() && C.observe(W[0], {
               childList: !0,
               subtree: !0
             })
           }
         },
         create: {
           id: function() {
             y = (Math.random().toString(16) + "000000000").substr(2, 8), b = "." + y, x.verbose("Creating unique id for element", y)
           },
           userChoice: function(t) {
             var n, i, o;
             return !!(t = t || x.get.userValues()) && (t = e.isArray(t) ? t : [t], e.each(t, function(t, a) {
               !1 === x.get.item(a) && (o = S.templates.addition(x.add.variables(A.addResult, a)), i = e("<div />").html(o).attr("data-" + q.value, a).attr("data-" + q.text, a).addClass(T.addition).addClass(T.item), S.hideAdditions && i.addClass(T.hidden), n = void 0 === n ? i : n.add(i), x.verbose("Creating user choices for value", a, i))
             }), n)
           },
           userLabels: function(t) {
             var n = x.get.userValues();
             n && (x.debug("Adding user labels", n), e.each(n, function(e, t) {
               x.verbose("Adding custom user value"), x.add.label(t, t)
             }))
           },
           menu: function() {
             W = e("<div />").addClass(T.menu).appendTo(P)
           },
           sizer: function() {
             j = e("<span />").addClass(T.sizer).insertAfter(H)
           }
         },
         search: function(e) {
           e = void 0 !== e ? e : x.get.query(), x.verbose("Searching for query", e), x.has.minCharacters(e) ? x.filter(e) : x.hide()
         },
         select: {
           firstUnfiltered: function() {
             x.verbose("Selecting first non-filtered element"), x.remove.selectedItem(), K.not(R.unselectable).not(R.addition + R.hidden).eq(0).addClass(T.selected)
           },
           nextAvailable: function(e) {
             e = e.eq(0);
             var t = e.nextAll(R.item).not(R.unselectable).eq(0),
               n = e.prevAll(R.item).not(R.unselectable).eq(0);
             t.length > 0 ? (x.verbose("Moving selection to", t), t.addClass(T.selected)) : (x.verbose("Moving selection to", n), n.addClass(T.selected))
           }
         },
         setup: {
           api: function() {
             var e = {
               debug: S.debug,
               urlData: {
                 value: x.get.value(),
                 query: x.get.query()
               },
               on: !1
             };
             x.verbose("First request, initializing API"), P.api(e)
           },
           layout: function() {
             P.is("select") && (x.setup.select(), x.setup.returnedObject()), x.has.menu() || x.create.menu(), x.is.search() && !x.has.search() && (x.verbose("Adding search input"), H = e("<input />").addClass(T.search).prop("autocomplete", "off").insertBefore(z)), x.is.multiple() && x.is.searchSelection() && !x.has.sizer() && x.create.sizer(), S.allowTab && x.set.tabbable()
           },
           select: function() {
             var t = x.get.selectValues();
             x.debug("Dropdown initialized on a select", t), P.is("select") && (N = P), N.parent(R.dropdown).length > 0 ? (x.debug("UI dropdown already exists. Creating dropdown menu only"), P = N.closest(R.dropdown), x.has.menu() || x.create.menu(), W = P.children(R.menu), x.setup.menu(t)) : (x.debug("Creating entire dropdown from select"), P = e("<div />").attr("class", N.attr("class")).addClass(T.selection).addClass(T.dropdown).html(I.dropdown(t)).insertBefore(N), N.hasClass(T.multiple) && !1 === N.prop("multiple") && (x.error(E.missingMultiple), N.prop("multiple", !0)), N.is("[multiple]") && x.set.multiple(), N.prop("disabled") && (x.debug("Disabling dropdown"), P.addClass(T.disabled)), N.removeAttr("class").detach().prependTo(P)), x.refresh()
           },
           menu: function(e) {
             W.html(I.menu(e, k)), K = W.find(R.item)
           },
           reference: function() {
             x.debug("Dropdown behavior was called on select, replacing with closest dropdown"), P = P.parent(R.dropdown), x.refresh(), x.setup.returnedObject(), v && (Z = x, x.invoke(d))
           },
           returnedObject: function() {
             var e = a.slice(0, f),
               t = a.slice(f + 1);
             a = e.add(P).add(t)
           }
         },
         refresh: function() {
           x.refreshSelectors(), x.refreshData()
         },
         refreshItems: function() {
           K = W.find(R.item)
         },
         refreshSelectors: function() {
           x.verbose("Refreshing selector cache"), z = P.find(R.text), H = P.find(R.search), N = P.find(R.input), U = P.find(R.icon), B = P.prev().find(R.text).length > 0 ? P.prev().find(R.text) : P.prev(), W = P.children(R.menu), K = W.find(R.item)
         },
         refreshData: function() {
           x.verbose("Refreshing cached metadata"), K.removeData(q.text).removeData(q.value)
         },
         clearData: function() {
           x.verbose("Clearing metadata"), K.removeData(q.text).removeData(q.value), P.removeData(q.defaultText).removeData(q.defaultValue).removeData(q.placeholderText)
         },
         toggle: function() {
           x.verbose("Toggling menu visibility"), x.is.active() ? x.hide() : x.show()
         },
         show: function(t) {
           if (t = e.isFunction(t) ? t : function() {}, !x.can.show() && x.is.remote() && (x.debug("No API results retrieved, searching before show"), x.queryRemote(x.get.query(), x.show)), x.can.show() && !x.is.active()) {
             if (x.debug("Showing dropdown"), !x.has.message() || x.has.maxSelections() || x.has.allResultsFiltered() || x.remove.message(), x.is.allFiltered()) return !0;
             !1 !== S.onShow.call(Y) && x.animate.show(function() {
               x.can.click() && x.bind.intent(), x.has.menuSearch() && x.focusSearch(), x.set.visible(), t.call(Y)
             })
           }
         },
         hide: function(t) {
           t = e.isFunction(t) ? t : function() {}, x.is.active() && (x.debug("Hiding dropdown"), !1 !== S.onHide.call(Y) && x.animate.hide(function() {
             x.remove.visible(), t.call(Y)
           }))
         },
         hideOthers: function() {
           x.verbose("Finding other dropdowns to hide"), a.not(P).has(R.menu + "." + T.visible).dropdown("hide")
         },
         hideMenu: function() {
           x.verbose("Hiding menu  instantaneously"), x.remove.active(), x.remove.visible(), W.transition("hide")
         },
         hideSubMenus: function() {
           var e = W.children(R.item).find(R.menu);
           x.verbose("Hiding sub menus", e), e.transition("hide")
         },
         bind: {
           events: function() {
             l && x.bind.touchEvents(), x.bind.keyboardEvents(), x.bind.inputEvents(), x.bind.mouseEvents()
           },
           touchEvents: function() {
             x.debug("Touch device detected binding additional touch events"), x.is.searchSelection() || x.is.single() && P.on("touchstart" + F, x.event.test.toggle), W.on("touchstart" + F, R.item, x.event.item.mouseenter)
           },
           keyboardEvents: function() {
             x.verbose("Binding keyboard events"), P.on("keydown" + F, x.event.keydown), x.has.search() && P.on(x.get.inputEvent() + F, R.search, x.event.input), x.is.multiple() && r.on("keydown" + b, x.event.document.keydown)
           },
           inputEvents: function() {
             x.verbose("Binding input change events"), P.on("change" + F, R.input, x.event.change)
           },
           mouseEvents: function() {
             x.verbose("Binding mouse events"), x.is.multiple() && P.on("click" + F, R.label, x.event.label.click).on("click" + F, R.remove, x.event.remove.click), x.is.searchSelection() ? (P.on("mousedown" + F, x.event.mousedown).on("mouseup" + F, x.event.mouseup).on("mousedown" + F, R.menu, x.event.menu.mousedown).on("mouseup" + F, R.menu, x.event.menu.mouseup).on("click" + F, R.icon, x.event.icon.click).on("focus" + F, R.search, x.event.search.focus).on("click" + F, R.search, x.event.search.focus).on("blur" + F, R.search, x.event.search.blur).on("click" + F, R.text, x.event.text.focus), x.is.multiple() && P.on("click" + F, x.event.click)) : ("click" == S.on ? P.on("click" + F, R.icon, x.event.icon.click).on("click" + F, x.event.test.toggle) : "hover" == S.on ? P.on("mouseenter" + F, x.delay.show).on("mouseleave" + F, x.delay.hide) : P.on(S.on + F, x.toggle), P.on("mousedown" + F, x.event.mousedown).on("mouseup" + F, x.event.mouseup).on("focus" + F, x.event.focus), x.has.menuSearch() ? P.on("blur" + F, R.search, x.event.search.blur) : P.on("blur" + F, x.event.blur)), W.on("mouseenter" + F, R.item, x.event.item.mouseenter).on("mouseleave" + F, R.item, x.event.item.mouseleave).on("click" + F, R.item, x.event.item.click)
           },
           intent: function() {
             x.verbose("Binding hide intent event to document"), l && r.on("touchstart" + b, x.event.test.touch).on("touchmove" + b, x.event.test.touch), r.on("click" + b, x.event.test.hide)
           }
         },
         unbind: {
           intent: function() {
             x.verbose("Removing hide intent event from document"), l && r.off("touchstart" + b).off("touchmove" + b), r.off("click" + b)
           }
         },
         filter: function(e) {
           var t = void 0 !== e ? e : x.get.query(),
             n = function() {
               x.is.multiple() && x.filterActive(), x.select.firstUnfiltered(), x.has.allResultsFiltered() ? S.onNoResults.call(Y, t) ? S.allowAdditions ? S.hideAdditions && (x.verbose("User addition with no menu, setting empty style"), x.set.empty(), x.hideMenu()) : (x.verbose("All items filtered, showing message", t), x.add.message(A.noResults)) : (x.verbose("All items filtered, hiding dropdown", t), x.hideMenu()) : (x.remove.empty(), x.remove.message()), S.allowAdditions && x.add.userSuggestion(e), x.is.searchSelection() && x.can.show() && x.is.focusedOnSearch() && x.show()
             };
           S.useLabels && x.has.maxSelections() || (S.apiSettings ? x.can.useAPI() ? x.queryRemote(t, function() {
             S.filterRemoteData && x.filterItems(t), n()
           }) : x.error(E.noAPI) : (x.filterItems(t), n()))
         },
         queryRemote: function(t, n) {
           var i = {
             errorDuration: !1,
             cache: "local",
             throttle: S.throttle,
             urlData: {
               query: t
             },
             onError: function() {
               x.add.message(A.serverError), n()
             },
             onFailure: function() {
               x.add.message(A.serverError), n()
             },
             onSuccess: function(e) {
               x.remove.message(), x.setup.menu({
                 values: e[k.remoteValues]
               }), n()
             }
           };
           P.api("get request") || x.setup.api(), i = e.extend(!0, {}, i, S.apiSettings), P.api("setting", i).api("query")
         },
         filterItems: function(t) {
           var n = void 0 !== t ? t : x.get.query(),
             i = null,
             o = x.escape.string(n),
             a = new RegExp("^" + o, "igm");
           x.has.query() && (i = [], x.verbose("Searching for matching values", n), K.each(function() {
             var t, o, r = e(this);
             if ("both" == S.match || "text" == S.match) {
               if (t = String(x.get.choiceText(r, !1)), -1 !== t.search(a)) return i.push(this), !0;
               if ("exact" === S.fullTextSearch && x.exactSearch(n, t)) return i.push(this), !0;
               if (!0 === S.fullTextSearch && x.fuzzySearch(n, t)) return i.push(this), !0
             }
             if ("both" == S.match || "value" == S.match) {
               if (o = String(x.get.choiceValue(r, t)), -1 !== o.search(a)) return i.push(this), !0;
               if ("exact" === S.fullTextSearch && x.exactSearch(n, o)) return i.push(this), !0;
               if (!0 === S.fullTextSearch && x.fuzzySearch(n, o)) return i.push(this), !0
             }
           })), x.debug("Showing only matched items", n), x.remove.filteredItem(), i && K.not(i).addClass(T.filtered)
         },
         fuzzySearch: function(e, t) {
           var n = t.length,
             i = e.length;
           if (e = e.toLowerCase(), t = t.toLowerCase(), i > n) return !1;
           if (i === n) return e === t;
           e: for (var o = 0, a = 0; o < i; o++) {
             for (var r = e.charCodeAt(o); a < n;)
               if (t.charCodeAt(a++) === r) continue e;
             return !1
           }
           return !0
         },
         exactSearch: function(e, t) {
           return e = e.toLowerCase(), t = t.toLowerCase(), t.indexOf(e) > -1
         },
         filterActive: function() {
           S.useLabels && K.filter("." + T.active).addClass(T.filtered)
         },
         focusSearch: function(e) {
           x.has.search() && !x.is.focusedOnSearch() && (e ? (P.off("focus" + F, R.search), H.focus(), P.on("focus" + F, R.search, x.event.search.focus)) : H.focus())
         },
         forceSelection: function() {
           var e = K.not(T.filtered).filter("." + T.selected).eq(0),
             t = K.not(T.filtered).filter("." + T.active).eq(0),
             n = e.length > 0 ? e : t;
           if (n.length > 0 && !x.is.multiple()) return x.debug("Forcing partial selection to selected item", n), void x.event.item.click.call(n, {}, !0);
           S.allowAdditions ? (x.set.selected(x.get.query()), x.remove.searchTerm()) : x.remove.searchTerm()
         },
         event: {
           change: function() {
             $ || (x.debug("Input changed, updating selection"), x.set.selected())
           },
           focus: function() {
             S.showOnFocus && !Q && x.is.hidden() && !g && x.show()
           },
           blur: function(e) {
             g = n.activeElement === this, Q || g || (x.remove.activeLabel(), x.hide())
           },
           mousedown: function() {
             x.is.searchSelection() ? p = !0 : Q = !0
           },
           mouseup: function() {
             x.is.searchSelection() ? p = !1 : Q = !1
           },
           click: function(t) {
             e(t.target).is(P) && (x.is.focusedOnSearch() ? x.show() : x.focusSearch())
           },
           search: {
             focus: function() {
               Q = !0, x.is.multiple() && x.remove.activeLabel(), S.showOnFocus && x.search()
             },
             blur: function(e) {
               g = n.activeElement === this, x.is.searchSelection() && !p && (X || g || (S.forceSelection && x.forceSelection(), x.hide())), p = !1
             }
           },
           icon: {
             click: function(e) {
               x.toggle()
             }
           },
           text: {
             focus: function(e) {
               Q = !0, x.focusSearch()
             }
           },
           input: function(e) {
             (x.is.multiple() || x.is.searchSelection()) && x.set.filtered(), clearTimeout(x.timer), x.timer = setTimeout(x.search, S.delay.search)
           },
           label: {
             click: function(t) {
               var n = e(this),
                 i = P.find(R.label),
                 o = i.filter("." + T.active),
                 a = n.nextAll("." + T.active),
                 r = n.prevAll("." + T.active),
                 s = a.length > 0 ? n.nextUntil(a).add(o).add(n) : n.prevUntil(r).add(o).add(n);
               t.shiftKey ? (o.removeClass(T.active), s.addClass(T.active)) : t.ctrlKey ? n.toggleClass(T.active) : (o.removeClass(T.active), n.addClass(T.active)), S.onLabelSelect.apply(this, i.filter("." + T.active))
             }
           },
           remove: {
             click: function() {
               var t = e(this).parent();
               t.hasClass(T.active) ? x.remove.activeLabels() : x.remove.activeLabels(t)
             }
           },
           test: {
             toggle: function(e) {
               var t = x.is.multiple() ? x.show : x.toggle;
               x.is.bubbledLabelClick(e) || x.is.bubbledIconClick(e) || x.determine.eventOnElement(e, t) && e.preventDefault()
             },
             touch: function(e) {
               x.determine.eventOnElement(e, function() {
                 "touchstart" == e.type ? x.timer = setTimeout(function() {
                   x.hide()
                 }, S.delay.touch) : "touchmove" == e.type && clearTimeout(x.timer)
               }), e.stopPropagation()
             },
             hide: function(e) {
               x.determine.eventInModule(e, x.hide)
             }
           },
           select: {
             mutation: function(e) {
               x.debug("<select> modified, recreating menu"), x.setup.select()
             }
           },
           menu: {
             mutation: function(t) {
               var n = t[0],
                 i = e(n.addedNodes ? n.addedNodes[0] : !1),
                 o = e(n.removedNodes ? n.removedNodes[0] : !1),
                 a = i.add(o),
                 r = a.is(R.addition) || a.closest(R.addition).length > 0,
                 s = a.is(R.message) || a.closest(R.message).length > 0;
               r || s ? (x.debug("Updating item selector cache"), x.refreshItems()) : (x.debug("Menu modified, updating selector cache"), x.refresh())
             },
             mousedown: function() {
               X = !0
             },
             mouseup: function() {
               X = !1
             }
           },
           item: {
             mouseenter: function(t) {
               var n = e(t.target),
                 i = e(this),
                 o = i.children(R.menu),
                 a = i.siblings(R.item).children(R.menu),
                 r = o.length > 0;
               !(o.find(n).length > 0) && r && (clearTimeout(x.itemTimer), x.itemTimer = setTimeout(function() {
                 x.verbose("Showing sub-menu", o), e.each(a, function() {
                   x.animate.hide(!1, e(this))
                 }), x.animate.show(!1, o)
               }, S.delay.show), t.preventDefault())
             },
             mouseleave: function(t) {
               var n = e(this).children(R.menu);
               n.length > 0 && (clearTimeout(x.itemTimer), x.itemTimer = setTimeout(function() {
                 x.verbose("Hiding sub-menu", n), x.animate.hide(!1, n)
               }, S.delay.hide))
             },
             click: function(t, i) {
               var o = e(this),
                 a = e(t ? t.target : ""),
                 r = o.find(R.menu),
                 s = x.get.choiceText(o),
                 l = x.get.choiceValue(o, s),
                 c = r.length > 0,
                 u = r.find(a).length > 0;
               x.has.menuSearch() && e(n.activeElement).blur(), u || c && !S.allowCategorySelection || (x.is.searchSelection() && (S.allowAdditions && x.remove.userAddition(), x.remove.searchTerm(), x.is.focusedOnSearch() || 1 == i || x.focusSearch(!0)), S.useLabels || (x.remove.filteredItem(), x.set.scrollPosition(o)), x.determine.selectAction.call(this, s, l))
             }
           },
           document: {
             keydown: function(e) {
               var t = e.which;
               if (x.is.inObject(t, D)) {
                 var n = P.find(R.label),
                   i = n.filter("." + T.active),
                   o = (i.data(q.value), n.index(i)),
                   a = n.length,
                   r = i.length > 0,
                   s = i.length > 1,
                   l = 0 === o,
                   c = o + 1 == a,
                   u = x.is.searchSelection(),
                   d = x.is.focusedOnSearch(),
                   v = x.is.focused(),
                   m = d && 0 === x.get.caretPosition();
                 if (u && !r && !d) return;
                 t == D.leftArrow ? !v && !m || r ? r && (e.shiftKey ? x.verbose("Adding previous label to selection") : (x.verbose("Selecting previous label"), n.removeClass(T.active)), l && !s ? i.addClass(T.active) : i.prev(R.siblingLabel).addClass(T.active).end(), e.preventDefault()) : (x.verbose("Selecting previous label"), n.last().addClass(T.active)) : t == D.rightArrow ? (v && !r && n.first().addClass(T.active), r && (e.shiftKey ? x.verbose("Adding next label to selection") : (x.verbose("Selecting next label"), n.removeClass(T.active)), c ? u ? d ? n.removeClass(T.active) : x.focusSearch() : s ? i.next(R.siblingLabel).addClass(T.active) : i.addClass(T.active) : i.next(R.siblingLabel).addClass(T.active), e.preventDefault())) : t == D.deleteKey || t == D.backspace ? r ? (x.verbose("Removing active labels"), c && u && !d && x.focusSearch(), i.last().next(R.siblingLabel).addClass(T.active), x.remove.activeLabels(i), e.preventDefault()) : m && !r && t == D.backspace && (x.verbose("Removing last label on input backspace"), i = n.last().addClass(T.active), x.remove.activeLabels(i)) : i.removeClass(T.active)
               }
             }
           },
           keydown: function(e) {
             var t = e.which;
             if (x.is.inObject(t, D)) {
               var n, i = K.not(R.unselectable).filter("." + T.selected).eq(0),
                 o = W.children("." + T.active).eq(0),
                 a = i.length > 0 ? i : o,
                 r = a.length > 0 ? a.siblings(":not(." + T.filtered + ")").addBack() : W.children(":not(." + T.filtered + ")"),
                 s = a.children(R.menu),
                 l = a.closest(R.menu),
                 c = l.hasClass(T.visible) || l.hasClass(T.animating) || l.parent(R.menu).length > 0,
                 u = s.length > 0,
                 d = a.length > 0,
                 v = a.not(R.unselectable).length > 0,
                 m = t == D.delimiter && S.allowAdditions && x.is.multiple(),
                 f = S.allowAdditions && S.hideAdditions && (t == D.enter || m) && v;
               if (f && (x.verbose("Selecting item from keyboard shortcut", a), x.event.item.click.call(a, e), x.is.searchSelection() && x.remove.searchTerm()), x.is.visible()) {
                 if ((t == D.enter || m) && (t == D.enter && d && u && !S.allowCategorySelection ? (x.verbose("Pressed enter on unselectable category, opening sub menu"), t = D.rightArrow) : v && (x.verbose("Selecting item from keyboard shortcut", a), x.event.item.click.call(a, e), x.is.searchSelection() && x.remove.searchTerm()), e.preventDefault()), d && (t == D.leftArrow && l[0] !== W[0] && (x.verbose("Left key pressed, closing sub-menu"), x.animate.hide(!1, l), a.removeClass(T.selected), l.closest(R.item).addClass(T.selected), e.preventDefault()), t == D.rightArrow && u && (x.verbose("Right key pressed, opening sub-menu"), x.animate.show(!1, s), a.removeClass(T.selected), s.find(R.item).eq(0).addClass(T.selected), e.preventDefault())), t == D.upArrow) {
                   if (n = d && c ? a.prevAll(R.item + ":not(" + R.unselectable + ")").eq(0) : K.eq(0), r.index(n) < 0) return x.verbose("Up key pressed but reached top of current menu"), void e.preventDefault();
                   x.verbose("Up key pressed, changing active item"), a.removeClass(T.selected), n.addClass(T.selected), x.set.scrollPosition(n), S.selectOnKeydown && x.is.single() && x.set.selectedItem(n), e.preventDefault()
                 }
                 if (t == D.downArrow) {
                   if (n = d && c ? n = a.nextAll(R.item + ":not(" + R.unselectable + ")").eq(0) : K.eq(0), 0 === n.length) return x.verbose("Down key pressed but reached bottom of current menu"), void e.preventDefault();
                   x.verbose("Down key pressed, changing active item"),
                     K.removeClass(T.selected), n.addClass(T.selected), x.set.scrollPosition(n), S.selectOnKeydown && x.is.single() && x.set.selectedItem(n), e.preventDefault()
                 }
                 t == D.pageUp && (x.scrollPage("up"), e.preventDefault()), t == D.pageDown && (x.scrollPage("down"), e.preventDefault()), t == D.escape && (x.verbose("Escape key pressed, closing dropdown"), x.hide())
               } else m && e.preventDefault(), t != D.downArrow || x.is.visible() || (x.verbose("Down key pressed, showing dropdown"), x.select.firstUnfiltered(), x.show(), e.preventDefault())
             } else x.has.search() || x.set.selectedLetter(String.fromCharCode(t))
           }
         },
         trigger: {
           change: function() {
             var e = n.createEvent("HTMLEvents"),
               t = N[0];
             t && (x.verbose("Triggering native change event"), e.initEvent("change", !0, !1), t.dispatchEvent(e))
           }
         },
         determine: {
           selectAction: function(t, n) {
             x.verbose("Determining action", S.action), e.isFunction(x.action[S.action]) ? (x.verbose("Triggering preset action", S.action, t, n), x.action[S.action].call(Y, t, n, this)) : e.isFunction(S.action) ? (x.verbose("Triggering user action", S.action, t, n), S.action.call(Y, t, n, this)) : x.error(E.action, S.action)
           },
           eventInModule: function(t, i) {
             var o = e(t.target),
               a = o.closest(n.documentElement).length > 0,
               r = o.closest(P).length > 0;
             return i = e.isFunction(i) ? i : function() {}, a && !r ? (x.verbose("Triggering event", i), i(), !0) : (x.verbose("Event occurred in dropdown, canceling callback"), !1)
           },
           eventOnElement: function(t, i) {
             var o = e(t.target),
               a = o.closest(R.siblingLabel),
               r = n.body.contains(t.target),
               s = 0 === P.find(a).length,
               l = 0 === o.closest(W).length;
             return i = e.isFunction(i) ? i : function() {}, r && s && l ? (x.verbose("Triggering event", i), i(), !0) : (x.verbose("Event occurred in dropdown menu, canceling callback"), !1)
           }
         },
         action: {
           nothing: function() {},
           activate: function(t, n, i) {
             if (n = void 0 !== n ? n : t, x.can.activate(e(i))) {
               if (x.set.selected(n, e(i)), x.is.multiple() && !x.is.allFiltered()) return;
               x.hideAndClear()
             }
           },
           select: function(t, n, i) {
             if (n = void 0 !== n ? n : t, x.can.activate(e(i))) {
               if (x.set.value(n, e(i)), x.is.multiple() && !x.is.allFiltered()) return;
               x.hideAndClear()
             }
           },
           combo: function(t, n, i) {
             n = void 0 !== n ? n : t, x.set.selected(n, e(i)), x.hideAndClear()
           },
           hide: function(e, t, n) {
             x.set.value(t, e), x.hideAndClear()
           }
         },
         get: {
           id: function() {
             return y
           },
           defaultText: function() {
             return P.data(q.defaultText)
           },
           defaultValue: function() {
             return P.data(q.defaultValue)
           },
           placeholderText: function() {
             return P.data(q.placeholderText) || ""
           },
           text: function() {
             return z.text()
           },
           query: function() {
             return e.trim(H.val())
           },
           searchWidth: function(e) {
             return e = void 0 !== e ? e : H.val(), j.text(e), Math.ceil(j.width() + 1)
           },
           selectionCount: function() {
             var t = x.get.values();
             return x.is.multiple() ? e.isArray(t) ? t.length : 0 : "" !== x.get.value() ? 1 : 0
           },
           transition: function(e) {
             return "auto" == S.transition ? x.is.upward(e) ? "slide up" : "slide down" : S.transition
           },
           userValues: function() {
             var t = x.get.values();
             return !!t && (t = e.isArray(t) ? t : [t], e.grep(t, function(e) {
               return !1 === x.get.item(e)
             }))
           },
           uniqueArray: function(t) {
             return e.grep(t, function(n, i) {
               return e.inArray(n, t) === i
             })
           },
           caretPosition: function() {
             var e, t, i = H.get(0);
             return "selectionStart" in i ? i.selectionStart : n.selection ? (i.focus(), e = n.selection.createRange(), t = e.text.length, e.moveStart("character", -i.value.length), e.text.length - t) : void 0
           },
           value: function() {
             var t = N.length > 0 ? N.val() : P.data(q.value),
               n = e.isArray(t) && 1 === t.length && "" === t[0];
             return void 0 === t || n ? "" : t
           },
           values: function() {
             var e = x.get.value();
             return "" === e ? "" : !x.has.selectInput() && x.is.multiple() ? "string" == typeof e ? e.split(S.delimiter) : "" : e
           },
           remoteValues: function() {
             var t = x.get.values(),
               n = !1;
             return t && ("string" == typeof t && (t = [t]), e.each(t, function(e, t) {
               var i = x.read.remoteData(t);
               x.verbose("Restoring value from session data", i, t), i && (n || (n = {}), n[t] = i)
             })), n
           },
           choiceText: function(t, n) {
             if (n = void 0 !== n ? n : S.preserveHTML, t) return t.find(R.menu).length > 0 && (x.verbose("Retrieving text of element with sub-menu"), t = t.clone(), t.find(R.menu).remove(), t.find(R.menuIcon).remove()), void 0 !== t.data(q.text) ? t.data(q.text) : n ? e.trim(t.html()) : e.trim(t.text())
           },
           choiceValue: function(t, n) {
             return n = n || x.get.choiceText(t), !!t && (void 0 !== t.data(q.value) ? String(t.data(q.value)) : "string" == typeof n ? e.trim(n.toLowerCase()) : String(n))
           },
           inputEvent: function() {
             var e = H[0];
             return !!e && (void 0 !== e.oninput ? "input" : void 0 !== e.onpropertychange ? "propertychange" : "keyup")
           },
           selectValues: function() {
             var t = {};
             return t.values = [], P.find("option").each(function() {
               var n = e(this),
                 i = n.html(),
                 o = n.attr("disabled"),
                 a = void 0 !== n.attr("value") ? n.attr("value") : i;
               "auto" === S.placeholder && "" === a ? t.placeholder = i : t.values.push({
                 name: i,
                 value: a,
                 disabled: o
               })
             }), S.placeholder && "auto" !== S.placeholder && (x.debug("Setting placeholder value to", S.placeholder), t.placeholder = S.placeholder), S.sortSelect ? (t.values.sort(function(e, t) {
               return e.name > t.name ? 1 : -1
             }), x.debug("Retrieved and sorted values from select", t)) : x.debug("Retrieved values from select", t), t
           },
           activeItem: function() {
             return K.filter("." + T.active)
           },
           selectedItem: function() {
             var e = K.not(R.unselectable).filter("." + T.selected);
             return e.length > 0 ? e : K.eq(0)
           },
           itemWithAdditions: function(e) {
             var t = x.get.item(e),
               n = x.create.userChoice(e);
             return n && n.length > 0 && (t = t.length > 0 ? t.add(n) : n), t
           },
           item: function(t, n) {
             var i, o, a = !1;
             return t = void 0 !== t ? t : void 0 !== x.get.values() ? x.get.values() : x.get.text(), i = o ? t.length > 0 : void 0 !== t && null !== t, o = x.is.multiple() && e.isArray(t), n = "" === t || 0 === t || (n || !1), i && K.each(function() {
               var i = e(this),
                 r = x.get.choiceText(i),
                 s = x.get.choiceValue(i, r);
               if (null !== s && void 0 !== s)
                 if (o) - 1 === e.inArray(String(s), t) && -1 === e.inArray(r, t) || (a = a ? a.add(i) : i);
                 else if (n) {
                 if (x.verbose("Ambiguous dropdown value using strict type check", i, t), s === t || r === t) return a = i, !0
               } else if (String(s) == String(t) || r == t) return x.verbose("Found select item by value", s, t), a = i, !0
             }), a
           }
         },
         check: {
           maxSelections: function(e) {
             return !S.maxSelections || (e = void 0 !== e ? e : x.get.selectionCount(), e >= S.maxSelections ? (x.debug("Maximum selection count reached"), S.useLabels && (K.addClass(T.filtered), x.add.message(A.maxSelections)), !0) : (x.verbose("No longer at maximum selection count"), x.remove.message(), x.remove.filteredItem(), x.is.searchSelection() && x.filterItems(), !1))
           }
         },
         restore: {
           defaults: function() {
             x.clear(), x.restore.defaultText(), x.restore.defaultValue()
           },
           defaultText: function() {
             var e = x.get.defaultText();
             e === x.get.placeholderText ? (x.debug("Restoring default placeholder text", e), x.set.placeholderText(e)) : (x.debug("Restoring default text", e), x.set.text(e))
           },
           placeholderText: function() {
             x.set.placeholderText()
           },
           defaultValue: function() {
             var e = x.get.defaultValue();
             void 0 !== e && (x.debug("Restoring default value", e), "" !== e ? (x.set.value(e), x.set.selected()) : (x.remove.activeItem(), x.remove.selectedItem()))
           },
           labels: function() {
             S.allowAdditions && (S.useLabels || (x.error(E.labels), S.useLabels = !0), x.debug("Restoring selected values"), x.create.userLabels()), x.check.maxSelections()
           },
           selected: function() {
             x.restore.values(), x.is.multiple() ? (x.debug("Restoring previously selected values and labels"), x.restore.labels()) : x.debug("Restoring previously selected values")
           },
           values: function() {
             x.set.initialLoad(), S.apiSettings && S.saveRemoteData && x.get.remoteValues() ? x.restore.remoteValues() : x.set.selected(), x.remove.initialLoad()
           },
           remoteValues: function() {
             var t = x.get.remoteValues();
             x.debug("Recreating selected from session data", t), t && (x.is.single() ? e.each(t, function(e, t) {
               x.set.text(t)
             }) : e.each(t, function(e, t) {
               x.add.label(e, t)
             }))
           }
         },
         read: {
           remoteData: function(e) {
             var n;
             return void 0 === t.Storage ? void x.error(E.noStorage) : void 0 !== (n = sessionStorage.getItem(e)) && n
           }
         },
         save: {
           defaults: function() {
             x.save.defaultText(), x.save.placeholderText(), x.save.defaultValue()
           },
           defaultValue: function() {
             var e = x.get.value();
             x.verbose("Saving default value as", e), P.data(q.defaultValue, e)
           },
           defaultText: function() {
             var e = x.get.text();
             x.verbose("Saving default text as", e), P.data(q.defaultText, e)
           },
           placeholderText: function() {
             var e;
             !1 !== S.placeholder && z.hasClass(T.placeholder) && (e = x.get.text(), x.verbose("Saving placeholder text as", e), P.data(q.placeholderText, e))
           },
           remoteData: function(e, n) {
             if (void 0 === t.Storage) return void x.error(E.noStorage);
             x.verbose("Saving remote data to session storage", n, e), sessionStorage.setItem(n, e)
           }
         },
         clear: function() {
           x.is.multiple() && S.useLabels ? x.remove.labels() : (x.remove.activeItem(), x.remove.selectedItem()), x.set.placeholderText(), x.clearValue()
         },
         clearValue: function() {
           x.set.value("")
         },
         scrollPage: function(e, t) {
           var n, i, o, a = t || x.get.selectedItem(),
             r = a.closest(R.menu),
             s = r.outerHeight(),
             l = r.scrollTop(),
             c = K.eq(0).outerHeight(),
             u = Math.floor(s / c),
             d = (r.prop("scrollHeight"), "up" == e ? l - c * u : l + c * u),
             v = K.not(R.unselectable);
           o = "up" == e ? v.index(a) - u : v.index(a) + u, n = "up" == e ? o >= 0 : o < v.length, i = n ? v.eq(o) : "up" == e ? v.first() : v.last(), i.length > 0 && (x.debug("Scrolling page", e, i), a.removeClass(T.selected), i.addClass(T.selected), S.selectOnKeydown && x.is.single() && x.set.selectedItem(i), r.scrollTop(d))
         },
         set: {
           filtered: function() {
             var e = x.is.multiple(),
               t = x.is.searchSelection(),
               n = e && t,
               i = t ? x.get.query() : "",
               o = "string" == typeof i && i.length > 0,
               a = x.get.searchWidth(),
               r = "" !== i;
             e && o && (x.verbose("Adjusting input width", a, S.glyphWidth), H.css("width", a)), o || n && r ? (x.verbose("Hiding placeholder text"), z.addClass(T.filtered)) : (!e || n && !r) && (x.verbose("Showing placeholder text"), z.removeClass(T.filtered))
           },
           empty: function() {
             P.addClass(T.empty)
           },
           loading: function() {
             P.addClass(T.loading)
           },
           placeholderText: function(e) {
             e = e || x.get.placeholderText(), x.debug("Setting placeholder text", e), x.set.text(e), z.addClass(T.placeholder)
           },
           tabbable: function() {
             x.is.searchSelection() ? (x.debug("Added tabindex to searchable dropdown"), H.val("").attr("tabindex", 0), W.attr("tabindex", -1)) : (x.debug("Added tabindex to dropdown"), void 0 === P.attr("tabindex") && (P.attr("tabindex", 0), W.attr("tabindex", -1)))
           },
           initialLoad: function() {
             x.verbose("Setting initial load"), h = !0
           },
           activeItem: function(e) {
             S.allowAdditions && e.filter(R.addition).length > 0 ? e.addClass(T.filtered) : e.addClass(T.active)
           },
           partialSearch: function(e) {
             var t = x.get.query().length;
             H.val(e.substr(0, t))
           },
           scrollPosition: function(e, t) {
             var n, i, o, a, r, s, l, c, u;
             e = e || x.get.selectedItem(), n = e.closest(R.menu), i = e && e.length > 0, t = void 0 !== t && t, e && n.length > 0 && i && (a = e.position().top, n.addClass(T.loading), s = n.scrollTop(), r = n.offset().top, a = e.offset().top, o = s - r + a, t || (l = n.height(), u = s + l < o + 5, c = o - 5 < s), x.debug("Scrolling to active item", o), (t || c || u) && n.scrollTop(o), n.removeClass(T.loading))
           },
           text: function(e) {
             "select" !== S.action && ("combo" == S.action ? (x.debug("Changing combo button text", e, B), S.preserveHTML ? B.html(e) : B.text(e)) : (e !== x.get.placeholderText() && z.removeClass(T.placeholder), x.debug("Changing text", e, z), z.removeClass(T.filtered), S.preserveHTML ? z.html(e) : z.text(e)))
           },
           selectedItem: function(e) {
             var t = x.get.choiceValue(e),
               n = x.get.choiceText(e, !1),
               i = x.get.choiceText(e, !0);
             x.debug("Setting user selection to item", e), x.remove.activeItem(), x.set.partialSearch(n), x.set.activeItem(e), x.set.selected(t, e), x.set.text(i)
           },
           selectedLetter: function(t) {
             var n, i = K.filter("." + T.selected),
               o = i.length > 0 && x.has.firstLetter(i, t),
               a = !1;
             o && (n = i.nextAll(K).eq(0), x.has.firstLetter(n, t) && (a = n)), a || K.each(function() {
               if (x.has.firstLetter(e(this), t)) return a = e(this), !1
             }), a && (x.verbose("Scrolling to next value with letter", t), x.set.scrollPosition(a), i.removeClass(T.selected), a.addClass(T.selected), S.selectOnKeydown && x.is.single() && x.set.selectedItem(a))
           },
           direction: function(e) {
             "auto" == S.direction ? x.is.onScreen(e) ? x.remove.upward(e) : x.set.upward(e) : "upward" == S.direction && x.set.upward(e)
           },
           upward: function(e) {
             (e || P).addClass(T.upward)
           },
           value: function(e, t, n) {
             var i = x.escape.value(e),
               o = N.length > 0,
               a = (x.has.value(e), x.get.values()),
               r = void 0 !== e ? String(e) : e;
             if (o) {
               if (!S.allowReselection && r == a && (x.verbose("Skipping value update already same value", e, a), !x.is.initialLoad())) return;
               x.is.single() && x.has.selectInput() && x.can.extendSelect() && (x.debug("Adding user option", e), x.add.optionValue(e)), x.debug("Updating input value", i, a), $ = !0, N.val(i), !1 === S.fireOnInit && x.is.initialLoad() ? x.debug("Input native change event ignored on initial load") : x.trigger.change(), $ = !1
             } else x.verbose("Storing value in metadata", i, N), i !== a && P.data(q.value, r);
             !1 === S.fireOnInit && x.is.initialLoad() ? x.verbose("No callback on initial load", S.onChange) : S.onChange.call(Y, e, t, n)
           },
           active: function() {
             P.addClass(T.active)
           },
           multiple: function() {
             P.addClass(T.multiple)
           },
           visible: function() {
             P.addClass(T.visible)
           },
           exactly: function(e, t) {
             x.debug("Setting selected to exact values"), x.clear(), x.set.selected(e, t)
           },
           selected: function(t, n) {
             var i = x.is.multiple();
             (n = S.allowAdditions ? n || x.get.itemWithAdditions(t) : n || x.get.item(t)) && (x.debug("Setting selected menu item to", n), x.is.multiple() && x.remove.searchWidth(), x.is.single() ? (x.remove.activeItem(), x.remove.selectedItem()) : S.useLabels && x.remove.selectedItem(), n.each(function() {
               var t = e(this),
                 o = x.get.choiceText(t),
                 a = x.get.choiceValue(t, o),
                 r = t.hasClass(T.filtered),
                 s = t.hasClass(T.active),
                 l = t.hasClass(T.addition),
                 c = i && 1 == n.length;
               i ? !s || l ? (S.apiSettings && S.saveRemoteData && x.save.remoteData(o, a), S.useLabels ? (x.add.value(a, o, t), x.add.label(a, o, c), x.set.activeItem(t), x.filterActive(), x.select.nextAvailable(n)) : (x.add.value(a, o, t), x.set.text(x.add.variables(A.count)), x.set.activeItem(t))) : r || (x.debug("Selected active value, removing label"), x.remove.selected(a)) : (S.apiSettings && S.saveRemoteData && x.save.remoteData(o, a), x.set.text(o), x.set.value(a, o, t), t.addClass(T.active).addClass(T.selected))
             }))
           }
         },
         add: {
           label: function(t, n, i) {
             var o, a = x.is.searchSelection() ? H : z,
               r = x.escape.value(t);
             if (o = e("<a />").addClass(T.label).attr("data-" + q.value, r).html(I.label(r, n)), o = S.onLabelCreate.call(o, r, n), x.has.label(t)) return void x.debug("Label already exists, skipping", r);
             S.label.variation && o.addClass(S.label.variation), !0 === i ? (x.debug("Animating in label", o), o.addClass(T.hidden).insertBefore(a).transition(S.label.transition, S.label.duration)) : (x.debug("Adding selection label", o), o.insertBefore(a))
           },
           message: function(t) {
             var n = W.children(R.message),
               i = S.templates.message(x.add.variables(t));
             n.length > 0 ? n.html(i) : n = e("<div/>").html(i).addClass(T.message).appendTo(W)
           },
           optionValue: function(t) {
             var n = x.escape.value(t);
             N.find('option[value="' + x.escape.string(n) + '"]').length > 0 || (x.disconnect.selectObserver(), x.is.single() && (x.verbose("Removing previous user addition"), N.find("option." + T.addition).remove()), e("<option/>").prop("value", n).addClass(T.addition).html(t).appendTo(N), x.verbose("Adding user addition as an <option>", t), x.observe.select())
           },
           userSuggestion: function(e) {
             var t, n = W.children(R.addition),
               i = x.get.item(e),
               o = i && i.not(R.addition).length,
               a = n.length > 0;
             if (!S.useLabels || !x.has.maxSelections()) {
               if ("" === e || o) return void n.remove();
               a ? (n.data(q.value, e).data(q.text, e).attr("data-" + q.value, e).attr("data-" + q.text, e).removeClass(T.filtered), S.hideAdditions || (t = S.templates.addition(x.add.variables(A.addResult, e)), n.html(t)), x.verbose("Replacing user suggestion with new value", n)) : (n = x.create.userChoice(e), n.prependTo(W), x.verbose("Adding item choice to menu corresponding with user choice addition", n)), S.hideAdditions && !x.is.allFiltered() || n.addClass(T.selected).siblings().removeClass(T.selected), x.refreshItems()
             }
           },
           variables: function(e, t) {
             var n, i, o = -1 !== e.search("{count}"),
               a = -1 !== e.search("{maxCount}"),
               r = -1 !== e.search("{term}");
             return x.verbose("Adding templated variables to message", e), o && (n = x.get.selectionCount(), e = e.replace("{count}", n)), a && (n = x.get.selectionCount(), e = e.replace("{maxCount}", S.maxSelections)), r && (i = t || x.get.query(), e = e.replace("{term}", i)), e
           },
           value: function(t, n, i) {
             var o, a = x.get.values();
             if ("" === t) return void x.debug("Cannot select blank values from multiselect");
             e.isArray(a) ? (o = a.concat([t]), o = x.get.uniqueArray(o)) : o = [t], x.has.selectInput() ? x.can.extendSelect() && (x.debug("Adding value to select", t, o, N), x.add.optionValue(t)) : (o = o.join(S.delimiter), x.debug("Setting hidden input to delimited value", o, N)), !1 === S.fireOnInit && x.is.initialLoad() ? x.verbose("Skipping onadd callback on initial load", S.onAdd) : S.onAdd.call(Y, t, n, i), x.set.value(o, t, n, i), x.check.maxSelections()
           }
         },
         remove: {
           active: function() {
             P.removeClass(T.active)
           },
           activeLabel: function() {
             P.find(R.label).removeClass(T.active)
           },
           empty: function() {
             P.removeClass(T.empty)
           },
           loading: function() {
             P.removeClass(T.loading)
           },
           initialLoad: function() {
             h = !1
           },
           upward: function(e) {
             (e || P).removeClass(T.upward)
           },
           visible: function() {
             P.removeClass(T.visible)
           },
           activeItem: function() {
             K.removeClass(T.active)
           },
           filteredItem: function() {
             S.useLabels && x.has.maxSelections() || (S.useLabels && x.is.multiple() ? K.not("." + T.active).removeClass(T.filtered) : K.removeClass(T.filtered), x.remove.empty())
           },
           optionValue: function(e) {
             var t = x.escape.value(e),
               n = N.find('option[value="' + x.escape.string(t) + '"]');
             n.length > 0 && n.hasClass(T.addition) && (w && (w.disconnect(), x.verbose("Temporarily disconnecting mutation observer")), n.remove(), x.verbose("Removing user addition as an <option>", t), w && w.observe(N[0], {
               childList: !0,
               subtree: !0
             }))
           },
           message: function() {
             W.children(R.message).remove()
           },
           searchWidth: function() {
             H.css("width", "")
           },
           searchTerm: function() {
             x.verbose("Cleared search term"), H.val(""), x.set.filtered()
           },
           userAddition: function() {
             K.filter(R.addition).remove()
           },
           selected: function(t, n) {
             if (!(n = S.allowAdditions ? n || x.get.itemWithAdditions(t) : n || x.get.item(t))) return !1;
             n.each(function() {
               var t = e(this),
                 n = x.get.choiceText(t),
                 i = x.get.choiceValue(t, n);
               x.is.multiple() ? S.useLabels ? (x.remove.value(i, n, t), x.remove.label(i)) : (x.remove.value(i, n, t), 0 === x.get.selectionCount() ? x.set.placeholderText() : x.set.text(x.add.variables(A.count))) : x.remove.value(i, n, t), t.removeClass(T.filtered).removeClass(T.active), S.useLabels && t.removeClass(T.selected)
             })
           },
           selectedItem: function() {
             K.removeClass(T.selected)
           },
           value: function(e, t, n) {
             var i, o = x.get.values();
             x.has.selectInput() ? (x.verbose("Input is <select> removing selected option", e), i = x.remove.arrayValue(e, o), x.remove.optionValue(e)) : (x.verbose("Removing from delimited values", e), i = x.remove.arrayValue(e, o), i = i.join(S.delimiter)), !1 === S.fireOnInit && x.is.initialLoad() ? x.verbose("No callback on initial load", S.onRemove) : S.onRemove.call(Y, e, t, n), x.set.value(i, t, n), x.check.maxSelections()
           },
           arrayValue: function(t, n) {
             return e.isArray(n) || (n = [n]), n = e.grep(n, function(e) {
               return t != e
             }), x.verbose("Removed value from delimited string", t, n), n
           },
           label: function(e, t) {
             var n = P.find(R.label),
               i = n.filter("[data-" + q.value + '="' + x.escape.string(e) + '"]');
             x.verbose("Removing label", i), i.remove()
           },
           activeLabels: function(e) {
             e = e || P.find(R.label).filter("." + T.active), x.verbose("Removing active label selections", e), x.remove.labels(e)
           },
           labels: function(t) {
             t = t || P.find(R.label), x.verbose("Removing labels", t), t.each(function() {
               var t = e(this),
                 n = t.data(q.value),
                 i = void 0 !== n ? String(n) : n,
                 o = x.is.userValue(i);
               if (!1 === S.onLabelRemove.call(t, n)) return void x.debug("Label remove callback cancelled removal");
               x.remove.message(), o ? (x.remove.value(i), x.remove.label(i)) : x.remove.selected(i)
             })
           },
           tabbable: function() {
             x.is.searchSelection() ? (x.debug("Searchable dropdown initialized"), H.removeAttr("tabindex"), W.removeAttr("tabindex")) : (x.debug("Simple selection dropdown initialized"), P.removeAttr("tabindex"), W.removeAttr("tabindex"))
           }
         },
         has: {
           menuSearch: function() {
             return x.has.search() && H.closest(W).length > 0
           },
           search: function() {
             return H.length > 0
           },
           sizer: function() {
             return j.length > 0
           },
           selectInput: function() {
             return N.is("select")
           },
           minCharacters: function(e) {
             return !S.minCharacters || (e = void 0 !== e ? String(e) : String(x.get.query()), e.length >= S.minCharacters)
           },
           firstLetter: function(e, t) {
             var n, i;
             return !(!e || 0 === e.length || "string" != typeof t) && (n = x.get.choiceText(e, !1), t = t.toLowerCase(), i = String(n).charAt(0).toLowerCase(), t == i)
           },
           input: function() {
             return N.length > 0
           },
           items: function() {
             return K.length > 0
           },
           menu: function() {
             return W.length > 0
           },
           message: function() {
             return 0 !== W.children(R.message).length
           },
           label: function(e) {
             var t = x.escape.value(e);
             return P.find(R.label).filter("[data-" + q.value + '="' + x.escape.string(t) + '"]').length > 0
           },
           maxSelections: function() {
             return S.maxSelections && x.get.selectionCount() >= S.maxSelections
           },
           allResultsFiltered: function() {
             var e = K.not(R.addition);
             return e.filter(R.unselectable).length === e.length
           },
           userSuggestion: function() {
             return W.children(R.addition).length > 0
           },
           query: function() {
             return "" !== x.get.query()
           },
           value: function(t) {
             var n = x.get.values();
             return !!(e.isArray(n) ? n && -1 !== e.inArray(t, n) : n == t)
           }
         },
         is: {
           active: function() {
             return P.hasClass(T.active)
           },
           bubbledLabelClick: function(t) {
             return e(t.target).is("select, input") && P.closest("label").length > 0
           },
           bubbledIconClick: function(t) {
             return e(t.target).closest(U).length > 0
           },
           alreadySetup: function() {
             return P.is("select") && P.parent(R.dropdown).length > 0 && 0 === P.prev().length
           },
           animating: function(e) {
             return e ? e.transition && e.transition("is animating") : W.transition && W.transition("is animating")
           },
           disabled: function() {
             return P.hasClass(T.disabled)
           },
           focused: function() {
             return n.activeElement === P[0]
           },
           focusedOnSearch: function() {
             return n.activeElement === H[0]
           },
           allFiltered: function() {
             return (x.is.multiple() || x.has.search()) && !(0 == S.hideAdditions && x.has.userSuggestion()) && !x.has.message() && x.has.allResultsFiltered()
           },
           hidden: function(e) {
             return !x.is.visible(e)
           },
           initialLoad: function() {
             return h
           },
           onScreen: function(e) {
             var t, n = e || W,
               i = !0,
               o = {};
             return n.addClass(T.loading), t = {
               context: {
                 scrollTop: V.scrollTop(),
                 height: V.outerHeight()
               },
               menu: {
                 offset: n.offset(),
                 height: n.outerHeight()
               }
             }, x.is.verticallyScrollableContext() && (t.menu.offset.top += t.context.scrollTop), o = {
               above: t.context.scrollTop <= t.menu.offset.top - t.menu.height,
               below: t.context.scrollTop + t.context.height >= t.menu.offset.top + t.menu.height
             }, o.below ? (x.verbose("Dropdown can fit in context downward", o), i = !0) : o.below || o.above ? (x.verbose("Dropdown cannot fit below, opening upward", o), i = !1) : (x.verbose("Dropdown cannot fit in either direction, favoring downward", o), i = !0), n.removeClass(T.loading), i
           },
           inObject: function(t, n) {
             var i = !1;
             return e.each(n, function(e, n) {
               if (n == t) return i = !0, !0
             }), i
           },
           multiple: function() {
             return P.hasClass(T.multiple)
           },
           remote: function() {
             return S.apiSettings && x.can.useAPI()
           },
           single: function() {
             return !x.is.multiple()
           },
           selectMutation: function(t) {
             var n = !1;
             return e.each(t, function(t, i) {
               if (i.target && e(i.target).is("select")) return n = !0, !0
             }), n
           },
           search: function() {
             return P.hasClass(T.search)
           },
           searchSelection: function() {
             return x.has.search() && 1 === H.parent(R.dropdown).length
           },
           selection: function() {
             return P.hasClass(T.selection)
           },
           userValue: function(t) {
             return -1 !== e.inArray(t, x.get.userValues())
           },
           upward: function(e) {
             return (e || P).hasClass(T.upward)
           },
           visible: function(e) {
             return e ? e.hasClass(T.visible) : W.hasClass(T.visible)
           },
           verticallyScrollableContext: function() {
             var e = V.get(0) !== t && V.css("overflow-y");
             return "auto" == e || "scroll" == e
           }
         },
         can: {
           activate: function(e) {
             return !!S.useLabels || (!x.has.maxSelections() || !(!x.has.maxSelections() || !e.hasClass(T.active)))
           },
           click: function() {
             return l || "click" == S.on
           },
           extendSelect: function() {
             return S.allowAdditions || S.apiSettings
           },
           show: function() {
             return !x.is.disabled() && (x.has.items() || x.has.message())
           },
           useAPI: function() {
             return void 0 !== e.fn.api
           }
         },
         animate: {
           show: function(t, n) {
             var i, o = n || W,
               a = n ? function() {} : function() {
                 x.hideSubMenus(), x.hideOthers(), x.set.active()
               };
             t = e.isFunction(t) ? t : function() {}, x.verbose("Doing menu show animation", o), x.set.direction(n), i = x.get.transition(n), x.is.selection() && x.set.scrollPosition(x.get.selectedItem(), !0), (x.is.hidden(o) || x.is.animating(o)) && ("none" == i ? (a(), o.transition("show"), t.call(Y)) : void 0 !== e.fn.transition && P.transition("is supported") ? o.transition({
               animation: i + " in",
               debug: S.debug,
               verbose: S.verbose,
               duration: S.duration,
               queue: !0,
               onStart: a,
               onComplete: function() {
                 t.call(Y)
               }
             }) : x.error(E.noTransition, i))
           },
           hide: function(t, n) {
             var i = n || W,
               o = (n ? S.duration : S.duration, n ? function() {} : function() {
                 x.can.click() && x.unbind.intent(), x.remove.active()
               }),
               a = x.get.transition(n);
             t = e.isFunction(t) ? t : function() {}, (x.is.visible(i) || x.is.animating(i)) && (x.verbose("Doing menu hide animation", i), "none" == a ? (o(), i.transition("hide"), t.call(Y)) : void 0 !== e.fn.transition && P.transition("is supported") ? i.transition({
               animation: a + " out",
               duration: S.duration,
               debug: S.debug,
               verbose: S.verbose,
               queue: !0,
               onStart: o,
               onComplete: function() {
                 "auto" == S.direction && x.remove.upward(n), t.call(Y)
               }
             }) : x.error(E.transition))
           }
         },
         hideAndClear: function() {
           x.remove.searchTerm(), x.has.maxSelections() || (x.has.search() ? x.hide(function() {
             x.remove.filteredItem()
           }) : x.hide())
         },
         delay: {
           show: function() {
             x.verbose("Delaying show event to ensure user intent"), clearTimeout(x.timer), x.timer = setTimeout(x.show, S.delay.show)
           },
           hide: function() {
             x.verbose("Delaying hide event to ensure user intent"), clearTimeout(x.timer), x.timer = setTimeout(x.hide, S.delay.hide)
           }
         },
         escape: {
           value: function(t) {
             var n = e.isArray(t),
               i = "string" == typeof t,
               o = !i && !n,
               a = i && -1 !== t.search(O.quote),
               r = [];
             return o || !a ? t : (x.debug("Encoding quote values for use in select", t), n ? (e.each(t, function(e, t) {
               r.push(t.replace(O.quote, "&quot;"))
             }), r) : t.replace(O.quote, "&quot;"))
           },
           string: function(e) {
             return e = String(e), e.replace(O.escape, "\\$&")
           }
         },
         setting: function(t, n) {
           if (x.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, S, t);
           else {
             if (void 0 === n) return S[t];
             e.isPlainObject(S[t]) ? e.extend(!0, S[t], n) : S[t] = n
           }
         },
         internal: function(t, n) {
           if (e.isPlainObject(t)) e.extend(!0, x, t);
           else {
             if (void 0 === n) return x[t];
             x[t] = n
           }
         },
         debug: function() {
           !S.silent && S.debug && (S.performance ? x.performance.log(arguments) : (x.debug = Function.prototype.bind.call(console.info, console, S.name + ":"), x.debug.apply(console, arguments)))
         },
         verbose: function() {
           !S.silent && S.verbose && S.debug && (S.performance ? x.performance.log(arguments) : (x.verbose = Function.prototype.bind.call(console.info, console, S.name + ":"), x.verbose.apply(console, arguments)))
         },
         error: function() {
           S.silent || (x.error = Function.prototype.bind.call(console.error, console, S.name + ":"), x.error.apply(console, arguments))
         },
         performance: {
           log: function(e) {
             var t, n, i;
             S.performance && (t = (new Date).getTime(), i = c || t, n = t - i, c = t, u.push({
               Name: e[0],
               Arguments: [].slice.call(e, 1) || "",
               Element: Y,
               "Execution Time": n
             })), clearTimeout(x.performance.timer), x.performance.timer = setTimeout(x.performance.display, 500)
           },
           display: function() {
             var t = S.name + ":",
               n = 0;
             c = !1, clearTimeout(x.performance.timer), e.each(u, function(e, t) {
               n += t["Execution Time"]
             }), t += " " + n + "ms", s && (t += " '" + s + "'"), (void 0 !== console.group || void 0 !== console.table) && u.length > 0 && (console.groupCollapsed(t), console.table ? console.table(u) : e.each(u, function(e, t) {
               console.log(t.Name + ": " + t["Execution Time"] + "ms")
             }), console.groupEnd()), u = []
           }
         },
         invoke: function(t, n, i) {
           var a, r, s, l = Z;
           return n = n || m, i = Y || i, "string" == typeof t && void 0 !== l && (t = t.split(/[\. ]/), a = t.length - 1, e.each(t, function(n, i) {
             var o = n != a ? i + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
             if (e.isPlainObject(l[o]) && n != a) l = l[o];
             else {
               if (void 0 !== l[o]) return r = l[o], !1;
               if (!e.isPlainObject(l[i]) || n == a) return void 0 !== l[i] ? (r = l[i], !1) : (x.error(E.method, t), !1);
               l = l[i]
             }
           })), e.isFunction(r) ? s = r.apply(i, n) : void 0 !== r && (s = r), e.isArray(o) ? o.push(s) : void 0 !== o ? o = [o, s] : void 0 !== s && (o = s), r
         }
       }, v ? (void 0 === Z && x.initialize(), x.invoke(d)) : (void 0 !== Z && Z.invoke("destroy"), x.initialize())
     }), void 0 !== o ? o : a
   }, e.fn.dropdown.settings = {
     silent: !1,
     debug: !1,
     verbose: !1,
     performance: !0,
     on: "click",
     action: "activate",
     apiSettings: !1,
     selectOnKeydown: !0,
     minCharacters: 0,
     filterRemoteData: !1,
     saveRemoteData: !0,
     throttle: 200,
     context: t,
     direction: "auto",
     keepOnScreen: !0,
     match: "both",
     fullTextSearch: !1,
     placeholder: "auto",
     preserveHTML: !0,
     sortSelect: !1,
     forceSelection: !0,
     allowAdditions: !1,
     hideAdditions: !0,
     maxSelections: !1,
     useLabels: !0,
     delimiter: ",",
     showOnFocus: !0,
     allowReselection: !1,
     allowTab: !0,
     allowCategorySelection: !1,
     fireOnInit: !1,
     transition: "auto",
     duration: 200,
     glyphWidth: 1.037,
     label: {
       transition: "scale",
       duration: 200,
       variation: !1
     },
     delay: {
       hide: 300,
       show: 200,
       search: 20,
       touch: 50
     },
     onChange: function(e, t, n) {},
     onAdd: function(e, t, n) {},
     onRemove: function(e, t, n) {},
     onLabelSelect: function(e) {},
     onLabelCreate: function(t, n) {
       return e(this)
     },
     onLabelRemove: function(e) {
       return !0
     },
     onNoResults: function(e) {
       return !0
     },
     onShow: function() {},
     onHide: function() {},
     name: "Dropdown",
     namespace: "dropdown",
     message: {
       addResult: "Add <b>{term}</b>",
       count: "{count} selected",
       maxSelections: "Max {maxCount} selections",
       noResults: "No results found.",
       serverError: "There was an error contacting the server"
     },
     error: {
       action: "You called a dropdown action that was not defined",
       alreadySetup: "Once a select has been initialized behaviors must be called on the created ui dropdown",
       labels: "Allowing user additions currently requires the use of labels.",
       missingMultiple: "<select> requires multiple property to be set to correctly preserve multiple values",
       method: "The method you called is not defined.",
       noAPI: "The API module is required to load resources remotely",
       noStorage: "Saving remote data requires session storage",
       noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>"
     },
     regExp: {
       escape: /[-[\]{}()*+?.,\\^$|#\s]/g,
       quote: /"/g
     },
     metadata: {
       defaultText: "defaultText",
       defaultValue: "defaultValue",
       placeholderText: "placeholder",
       text: "text",
       value: "value"
     },
     fields: {
       remoteValues: "results",
       values: "values",
       disabled: "disabled",
       name: "name",
       value: "value",
       text: "text"
     },
     keys: {
       backspace: 8,
       delimiter: 188,
       deleteKey: 46,
       enter: 13,
       escape: 27,
       pageUp: 33,
       pageDown: 34,
       leftArrow: 37,
       upArrow: 38,
       rightArrow: 39,
       downArrow: 40
     },
     selector: {
       addition: ".addition",
       dropdown: ".ui.dropdown",
       hidden: ".hidden",
       icon: "> .dropdown.icon",
       input: '> input[type="hidden"], > select',
       item: ".item",
       label: "> .label",
       remove: "> .label > .delete.icon",
       siblingLabel: ".label",
       menu: ".menu",
       message: ".message",
       menuIcon: ".dropdown.icon",
       search: "input.search, .menu > .search > input, .menu input.search",
       sizer: "> input.sizer",
       text: "> .text:not(.icon)",
       unselectable: ".disabled, .filtered"
     },
     className: {
       active: "active",
       addition: "addition",
       animating: "animating",
       disabled: "disabled",
       empty: "empty",
       dropdown: "ui dropdown",
       filtered: "filtered",
       hidden: "hidden transition",
       item: "item",
       label: "ui label",
       loading: "loading",
       menu: "menu",
       message: "message",
       multiple: "multiple",
       placeholder: "default",
       sizer: "sizer",
       search: "search",
       selected: "selected",
       selection: "selection",
       upward: "upward",
       visible: "visible"
     }
   }, e.fn.dropdown.settings.templates = {
     dropdown: function(t) {
       var n = t.placeholder || !1,
         i = (t.values, "");
       return i += '<i class="dropdown icon"></i>', t.placeholder ? i += '<div class="default text">' + n + "</div>" : i += '<div class="text"></div>', i += '<div class="menu">', e.each(t.values, function(e, t) {
         i += t.disabled ? '<div class="disabled item" data-value="' + t.value + '">' + t.name + "</div>" : '<div class="item" data-value="' + t.value + '">' + t.name + "</div>"
       }), i += "</div>"
     },
     menu: function(t, n) {
       var i = t[n.values] || {},
         o = "";
       return e.each(i, function(e, t) {
         var i = t[n.text] ? 'data-text="' + t[n.text] + '"' : "",
           a = t[n.disabled] ? "disabled " : "";
         o += '<div class="' + a + 'item" data-value="' + t[n.value] + '"' + i + ">", o += t[n.name], o += "</div>"
       }), o
     },
     label: function(e, t) {
       return t + '<i class="delete icon"></i>'
     },
     message: function(e) {
       return e
     },
     addition: function(e) {
       return e
     }
   }
 }(jQuery, window, document),
 function(e, t, n, i) {
   "use strict";
   t = void 0 !== t && t.Math == Math ? t : "undefined" != typeof self && self.Math == Math ? self : Function("return this")(), e.fn.transition = function() {
     var i, o = e(this),
       a = o.selector || "",
       r = (new Date).getTime(),
       s = [],
       l = arguments,
       c = l[0],
       u = [].slice.call(arguments, 1),
       d = "string" == typeof c;
     t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame;
     return o.each(function(t) {
       var v, m, f, h, g, p, b, y, w, C = e(this),
         x = this;
       w = {
         initialize: function() {
           v = w.get.settings.apply(x, l), h = v.className, f = v.error, g = v.metadata, y = "." + v.namespace, b = "module-" + v.namespace, m = C.data(b) || w, p = w.get.animationEndEvent(), d && (d = w.invoke(c)), !1 === d && (w.verbose("Converted arguments into settings object", v), v.interval ? w.delay(v.animate) : w.animate(), w.instantiate())
         },
         instantiate: function() {
           w.verbose("Storing instance of module", w), m = w, C.data(b, m)
         },
         destroy: function() {
           w.verbose("Destroying previous module for", x), C.removeData(b)
         },
         refresh: function() {
           w.verbose("Refreshing display type on next animation"), delete w.displayType
         },
         forceRepaint: function() {
           w.verbose("Forcing element repaint");
           var e = C.parent(),
             t = C.next();
           0 === t.length ? C.detach().appendTo(e) : C.detach().insertBefore(t)
         },
         repaint: function() {
           w.verbose("Repainting element");
           x.offsetWidth
         },
         delay: function(e) {
           var n, i, a = w.get.animationDirection();
           a || (a = w.can.transition() ? w.get.direction() : "static"), e = void 0 !== e ? e : v.interval, n = "auto" == v.reverse && a == h.outward,
             i = n || 1 == v.reverse ? (o.length - t) * v.interval : t * v.interval, w.debug("Delaying animation by", i), setTimeout(w.animate, i)
         },
         animate: function(e) {
           if (v = e || v, !w.is.supported()) return w.error(f.support), !1;
           if (w.debug("Preparing animation", v.animation), w.is.animating()) {
             if (v.queue) return !v.allowRepeats && w.has.direction() && w.is.occurring() && !0 !== w.queuing ? w.debug("Animation is currently occurring, preventing queueing same animation", v.animation) : w.queue(v.animation), !1;
             if (!v.allowRepeats && w.is.occurring()) return w.debug("Animation is already occurring, will not execute repeated animation", v.animation), !1;
             w.debug("New animation started, completing previous early", v.animation), m.complete()
           }
           w.can.animate() ? w.set.animating(v.animation) : w.error(f.noAnimation, v.animation, x)
         },
         reset: function() {
           w.debug("Resetting animation to beginning conditions"), w.remove.animationCallbacks(), w.restore.conditions(), w.remove.animating()
         },
         queue: function(e) {
           w.debug("Queueing animation of", e), w.queuing = !0, C.one(p + ".queue" + y, function() {
             w.queuing = !1, w.repaint(), w.animate.apply(this, v)
           })
         },
         complete: function(e) {
           w.debug("Animation complete", v.animation), w.remove.completeCallback(), w.remove.failSafe(), w.is.looping() || (w.is.outward() ? (w.verbose("Animation is outward, hiding element"), w.restore.conditions(), w.hide()) : w.is.inward() ? (w.verbose("Animation is outward, showing element"), w.restore.conditions(), w.show()) : (w.verbose("Static animation completed"), w.restore.conditions(), v.onComplete.call(x)))
         },
         force: {
           visible: function() {
             var e = C.attr("style"),
               t = w.get.userStyle(),
               n = w.get.displayType(),
               i = t + "display: " + n + " !important;",
               o = C.css("display"),
               a = void 0 === e || "" === e;
             o !== n ? (w.verbose("Overriding default display to show element", n), C.attr("style", i)) : a && C.removeAttr("style")
           },
           hidden: function() {
             var e = C.attr("style"),
               t = C.css("display"),
               n = void 0 === e || "" === e;
             "none" === t || w.is.hidden() ? n && C.removeAttr("style") : (w.verbose("Overriding default display to hide element"), C.css("display", "none"))
           }
         },
         has: {
           direction: function(t) {
             var n = !1;
             return t = t || v.animation, "string" == typeof t && (t = t.split(" "), e.each(t, function(e, t) {
               t !== h.inward && t !== h.outward || (n = !0)
             })), n
           },
           inlineDisplay: function() {
             var t = C.attr("style") || "";
             return e.isArray(t.match(/display.*?;/, ""))
           }
         },
         set: {
           animating: function(e) {
             var t;
             w.remove.completeCallback(), e = e || v.animation, t = w.get.animationClass(e), w.save.animation(t), w.force.visible(), w.remove.hidden(), w.remove.direction(), w.start.animation(t)
           },
           duration: function(e, t) {
             t = t || v.duration, ((t = "number" == typeof t ? t + "ms" : t) || 0 === t) && (w.verbose("Setting animation duration", t), C.css({
               "animation-duration": t
             }))
           },
           direction: function(e) {
             e = e || w.get.direction(), e == h.inward ? w.set.inward() : w.set.outward()
           },
           looping: function() {
             w.debug("Transition set to loop"), C.addClass(h.looping)
           },
           hidden: function() {
             C.addClass(h.transition).addClass(h.hidden)
           },
           inward: function() {
             w.debug("Setting direction to inward"), C.removeClass(h.outward).addClass(h.inward)
           },
           outward: function() {
             w.debug("Setting direction to outward"), C.removeClass(h.inward).addClass(h.outward)
           },
           visible: function() {
             C.addClass(h.transition).addClass(h.visible)
           }
         },
         start: {
           animation: function(e) {
             e = e || w.get.animationClass(), w.debug("Starting tween", e), C.addClass(e).one(p + ".complete" + y, w.complete), v.useFailSafe && w.add.failSafe(), w.set.duration(v.duration), v.onStart.call(x)
           }
         },
         save: {
           animation: function(e) {
             w.cache || (w.cache = {}), w.cache.animation = e
           },
           displayType: function(e) {
             "none" !== e && C.data(g.displayType, e)
           },
           transitionExists: function(t, n) {
             e.fn.transition.exists[t] = n, w.verbose("Saving existence of transition", t, n)
           }
         },
         restore: {
           conditions: function() {
             var e = w.get.currentAnimation();
             e && (C.removeClass(e), w.verbose("Removing animation class", w.cache)), w.remove.duration()
           }
         },
         add: {
           failSafe: function() {
             var e = w.get.duration();
             w.timer = setTimeout(function() {
               C.triggerHandler(p)
             }, e + v.failSafeDelay), w.verbose("Adding fail safe timer", w.timer)
           }
         },
         remove: {
           animating: function() {
             C.removeClass(h.animating)
           },
           animationCallbacks: function() {
             w.remove.queueCallback(), w.remove.completeCallback()
           },
           queueCallback: function() {
             C.off(".queue" + y)
           },
           completeCallback: function() {
             C.off(".complete" + y)
           },
           display: function() {
             C.css("display", "")
           },
           direction: function() {
             C.removeClass(h.inward).removeClass(h.outward)
           },
           duration: function() {
             C.css("animation-duration", "")
           },
           failSafe: function() {
             w.verbose("Removing fail safe timer", w.timer), w.timer && clearTimeout(w.timer)
           },
           hidden: function() {
             C.removeClass(h.hidden)
           },
           visible: function() {
             C.removeClass(h.visible)
           },
           looping: function() {
             w.debug("Transitions are no longer looping"), w.is.looping() && (w.reset(), C.removeClass(h.looping))
           },
           transition: function() {
             C.removeClass(h.visible).removeClass(h.hidden)
           }
         },
         get: {
           settings: function(t, n, i) {
             return "object" == typeof t ? e.extend(!0, {}, e.fn.transition.settings, t) : "function" == typeof i ? e.extend({}, e.fn.transition.settings, {
               animation: t,
               onComplete: i,
               duration: n
             }) : "string" == typeof n || "number" == typeof n ? e.extend({}, e.fn.transition.settings, {
               animation: t,
               duration: n
             }) : "object" == typeof n ? e.extend({}, e.fn.transition.settings, n, {
               animation: t
             }) : "function" == typeof n ? e.extend({}, e.fn.transition.settings, {
               animation: t,
               onComplete: n
             }) : e.extend({}, e.fn.transition.settings, {
               animation: t
             })
           },
           animationClass: function(e) {
             var t = e || v.animation,
               n = w.can.transition() && !w.has.direction() ? w.get.direction() + " " : "";
             return h.animating + " " + h.transition + " " + n + t
           },
           currentAnimation: function() {
             return !(!w.cache || void 0 === w.cache.animation) && w.cache.animation
           },
           currentDirection: function() {
             return w.is.inward() ? h.inward : h.outward
           },
           direction: function() {
             return w.is.hidden() || !w.is.visible() ? h.inward : h.outward
           },
           animationDirection: function(t) {
             var n;
             return t = t || v.animation, "string" == typeof t && (t = t.split(" "), e.each(t, function(e, t) {
               t === h.inward ? n = h.inward : t === h.outward && (n = h.outward)
             })), n || !1
           },
           duration: function(e) {
             return e = e || v.duration, !1 === e && (e = C.css("animation-duration") || 0), "string" == typeof e ? e.indexOf("ms") > -1 ? parseFloat(e) : 1e3 * parseFloat(e) : e
           },
           displayType: function(e) {
             return e = void 0 === e || e, v.displayType ? v.displayType : (e && void 0 === C.data(g.displayType) && w.can.transition(!0), C.data(g.displayType))
           },
           userStyle: function(e) {
             return e = e || C.attr("style") || "", e.replace(/display.*?;/, "")
           },
           transitionExists: function(t) {
             return e.fn.transition.exists[t]
           },
           animationStartEvent: function() {
             var e, t = n.createElement("div"),
               i = {
                 animation: "animationstart",
                 OAnimation: "oAnimationStart",
                 MozAnimation: "mozAnimationStart",
                 WebkitAnimation: "webkitAnimationStart"
               };
             for (e in i)
               if (void 0 !== t.style[e]) return i[e];
             return !1
           },
           animationEndEvent: function() {
             var e, t = n.createElement("div"),
               i = {
                 animation: "animationend",
                 OAnimation: "oAnimationEnd",
                 MozAnimation: "mozAnimationEnd",
                 WebkitAnimation: "webkitAnimationEnd"
               };
             for (e in i)
               if (void 0 !== t.style[e]) return i[e];
             return !1
           }
         },
         can: {
           transition: function(t) {
             var n, i, o, a, r, s, l = v.animation,
               c = w.get.transitionExists(l),
               u = w.get.displayType(!1);
             if (void 0 === c || t) {
               if (w.verbose("Determining whether animation exists"), n = C.attr("class"), i = C.prop("tagName"), o = e("<" + i + " />").addClass(n).insertAfter(C), a = o.addClass(l).removeClass(h.inward).removeClass(h.outward).addClass(h.animating).addClass(h.transition).css("animationName"), r = o.addClass(h.inward).css("animationName"), u || (u = o.attr("class", n).removeAttr("style").removeClass(h.hidden).removeClass(h.visible).show().css("display"), w.verbose("Determining final display state", u), w.save.displayType(u)), o.remove(), a != r) w.debug("Direction exists for animation", l), s = !0;
               else {
                 if ("none" == a || !a) return void w.debug("No animation defined in css", l);
                 w.debug("Static animation found", l, u), s = !1
               }
               w.save.transitionExists(l, s)
             }
             return void 0 !== c ? c : s
           },
           animate: function() {
             return void 0 !== w.can.transition()
           }
         },
         is: {
           animating: function() {
             return C.hasClass(h.animating)
           },
           inward: function() {
             return C.hasClass(h.inward)
           },
           outward: function() {
             return C.hasClass(h.outward)
           },
           looping: function() {
             return C.hasClass(h.looping)
           },
           occurring: function(e) {
             return e = e || v.animation, e = "." + e.replace(" ", "."), C.filter(e).length > 0
           },
           visible: function() {
             return C.is(":visible")
           },
           hidden: function() {
             return "hidden" === C.css("visibility")
           },
           supported: function() {
             return !1 !== p
           }
         },
         hide: function() {
           w.verbose("Hiding element"), w.is.animating() && w.reset(), x.blur(), w.remove.display(), w.remove.visible(), w.set.hidden(), w.force.hidden(), v.onHide.call(x), v.onComplete.call(x)
         },
         show: function(e) {
           w.verbose("Showing element", e), w.remove.hidden(), w.set.visible(), w.force.visible(), v.onShow.call(x), v.onComplete.call(x)
         },
         toggle: function() {
           w.is.visible() ? w.hide() : w.show()
         },
         stop: function() {
           w.debug("Stopping current animation"), C.triggerHandler(p)
         },
         stopAll: function() {
           w.debug("Stopping all animation"), w.remove.queueCallback(), C.triggerHandler(p)
         },
         clear: {
           queue: function() {
             w.debug("Clearing animation queue"), w.remove.queueCallback()
           }
         },
         enable: function() {
           w.verbose("Starting animation"), C.removeClass(h.disabled)
         },
         disable: function() {
           w.debug("Stopping animation"), C.addClass(h.disabled)
         },
         setting: function(t, n) {
           if (w.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, v, t);
           else {
             if (void 0 === n) return v[t];
             e.isPlainObject(v[t]) ? e.extend(!0, v[t], n) : v[t] = n
           }
         },
         internal: function(t, n) {
           if (e.isPlainObject(t)) e.extend(!0, w, t);
           else {
             if (void 0 === n) return w[t];
             w[t] = n
           }
         },
         debug: function() {
           !v.silent && v.debug && (v.performance ? w.performance.log(arguments) : (w.debug = Function.prototype.bind.call(console.info, console, v.name + ":"), w.debug.apply(console, arguments)))
         },
         verbose: function() {
           !v.silent && v.verbose && v.debug && (v.performance ? w.performance.log(arguments) : (w.verbose = Function.prototype.bind.call(console.info, console, v.name + ":"), w.verbose.apply(console, arguments)))
         },
         error: function() {
           v.silent || (w.error = Function.prototype.bind.call(console.error, console, v.name + ":"), w.error.apply(console, arguments))
         },
         performance: {
           log: function(e) {
             var t, n, i;
             v.performance && (t = (new Date).getTime(), i = r || t, n = t - i, r = t, s.push({
               Name: e[0],
               Arguments: [].slice.call(e, 1) || "",
               Element: x,
               "Execution Time": n
             })), clearTimeout(w.performance.timer), w.performance.timer = setTimeout(w.performance.display, 500)
           },
           display: function() {
             var t = v.name + ":",
               n = 0;
             r = !1, clearTimeout(w.performance.timer), e.each(s, function(e, t) {
               n += t["Execution Time"]
             }), t += " " + n + "ms", a && (t += " '" + a + "'"), o.length > 1 && (t += " (" + o.length + ")"), (void 0 !== console.group || void 0 !== console.table) && s.length > 0 && (console.groupCollapsed(t), console.table ? console.table(s) : e.each(s, function(e, t) {
               console.log(t.Name + ": " + t["Execution Time"] + "ms")
             }), console.groupEnd()), s = []
           }
         },
         invoke: function(t, n, o) {
           var a, r, s, l = m;
           return n = n || u, o = x || o, "string" == typeof t && void 0 !== l && (t = t.split(/[\. ]/), a = t.length - 1, e.each(t, function(n, i) {
             var o = n != a ? i + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
             if (e.isPlainObject(l[o]) && n != a) l = l[o];
             else {
               if (void 0 !== l[o]) return r = l[o], !1;
               if (!e.isPlainObject(l[i]) || n == a) return void 0 !== l[i] && (r = l[i], !1);
               l = l[i]
             }
           })), e.isFunction(r) ? s = r.apply(o, n) : void 0 !== r && (s = r), e.isArray(i) ? i.push(s) : void 0 !== i ? i = [i, s] : void 0 !== s && (i = s), void 0 !== r && r
         }
       }, w.initialize()
     }), void 0 !== i ? i : this
   }, e.fn.transition.exists = {}, e.fn.transition.settings = {
     name: "Transition",
     silent: !1,
     debug: !1,
     verbose: !1,
     performance: !0,
     namespace: "transition",
     interval: 0,
     reverse: "auto",
     onStart: function() {},
     onComplete: function() {},
     onShow: function() {},
     onHide: function() {},
     useFailSafe: !0,
     failSafeDelay: 100,
     allowRepeats: !1,
     displayType: !1,
     animation: "fade",
     duration: !1,
     queue: !0,
     metadata: {
       displayType: "display"
     },
     className: {
       animating: "animating",
       disabled: "disabled",
       hidden: "hidden",
       inward: "in",
       loading: "loading",
       looping: "looping",
       outward: "out",
       transition: "transition",
       visible: "visible"
     },
     error: {
       noAnimation: "Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.",
       repeated: "That animation is already occurring, cancelling repeated animation",
       method: "The method you called is not defined",
       support: "This browser does not support CSS animations"
     }
   }
 }(jQuery, window, document);
